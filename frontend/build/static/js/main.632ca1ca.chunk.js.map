{"version":3,"sources":["components/Navbar.js","components/Basket.js","components/User.js","components/Products.js","components/Home.js","constants/index.js","components/AddressDetails.js","components/BasketDetails.js","components/Checkout.js","components/ProductDetail.js","components/ValidatedFormLogin.js","components/ValidatedSignup.js","App.js","serviceWorker.js","store/dataStore.js","index.js"],"names":["Navbar","inject","observer","_ref","dataStore","history","useHistory","react_default","a","createElement","className","react_router_dom","to","isAuthenticated","currentUser","firstName","onClick","handleLogoutState","push","Basket","Cookies","useEffect","getBasket","items","basketContent","map","item","key","product","id","src","pictureUrl","alt","name","price","quantity","basket","basketPrice","User","getCurrentUser","Products","getProducts","listItems","products","concat","Home","API_BASE_URL","process","REACT_APP_API_BASE_URL","API_BASE_PORT","REACT_APP_API_PORT","validationSchema","Yup","shape","min","max","required","lastName","AddressDetails","formik_esm","initialValues","address1","city","postcode","onSubmit","values","console","log","alert","window","location","href","errors","touched","handleChange","handleBlur","Input","type","placeholder","value","onChange","onBlur","disableUnderline","BasketDetails","Checkout","isLogged","localStorage","getItem","AddressDetails_AddressDetails","react_router","ProductDetail","handleClick","_this","props","match","params","fetch","method","then","data","json","catch","this","getProductDetail","productDetail","Component","usernameOrEmail","password","ValidatedLoginForm","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","badCredentials","_this2","loginRequest","JSON","stringify","login","response","setItem","accessToken","handleLogin","error","status","setState","username","email","passwordConfirm","oneOf","ValidatedSignup","handleErrors","message","usernameExists","emailExists","userNameExists","signupRequest","signup","set","path","App","exact","component","ValidatedFormLogin","withRouter","Boolean","hostname","cookies","stores","observable","action","removeItem","options","headers","Headers","Content-Type","append","defaults","assign","url","ok","Promise","reject","get","_this3","_this4","_this5","_this6","request","_this7","body","_this8","ReactDOM","render","mobx_react_module","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.632ca1ca.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { observer, inject } from \"mobx-react\";\nimport { useHistory } from \"react-router-dom\";\n\nexport const Navbar = inject(\"dataStore\")(\n  observer(({ dataStore }) => {\n    let history = useHistory();\n\n    const handleLogout = () => {\n      dataStore.handleLogoutState();\n      history.push(\"/\");\n    };\n\n    return (\n      <nav>\n        <div className=\"nav-wrapper blue-grey\">\n          <div className=\"container\">\n            <Link to=\"/\" className=\"brand-logo\">\n              e-com\n            </Link>\n            <ul className=\"right\">\n              <li>\n                {\" \"}\n                {dataStore.isAuthenticated ? (\n                  <span>Hi there {dataStore.currentUser.firstName} </span>\n                ) : null}{\" \"}\n              </li>\n              <li>\n                {\" \"}\n                {dataStore.isAuthenticated ? (\n                  <span onClick={handleLogout}>logout</span>\n                ) : (\n                  <Link to=\"/login\">login</Link>\n                )}{\" \"}\n              </li>\n              <li>\n                <Link to=\"/basket\">\n                  <i className=\"material-icons\">shopping_cart</i>\n                </Link>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </nav>\n    );\n  })\n);\n","import React, { useEffect } from \"react\";\nimport { observer, inject } from \"mobx-react\";\nimport Cookies from \"universal-cookie\";\n\nconst cookies = new Cookies();\n\nexport const Basket = inject(\"dataStore\")(\n  observer(({ dataStore }) => {\n    useEffect(() => {\n      dataStore.getBasket();\n    }, []);\n\n    const items = dataStore.basketContent.map(item => (\n      <div className=\"card red\" key={item.product.id}>\n        <div className=\"\">\n          <div className=\"card-image\">\n            <img src={item.product.pictureUrl} alt={item.product.name} />\n            <span className=\"card-title\">{item.product.name}</span>\n          </div>\n          <div className=\"card-content row white\">\n            <div className=\"col s6\">\n              <b>Price: £{item.product.price}</b>\n            </div>\n            <div className=\"col s6\">\n              <b>Quantity: {item.quantity}</b>\n            </div>\n          </div>\n        </div>\n      </div>\n    ));\n\n    return (\n      <div>\n        <div className=\"container grey\">\n          <div>{items}</div>\n          <div className=\"\">Subtotal: £{dataStore.basket.basketPrice}</div>\n        </div>\n      </div>\n    );\n  })\n);\n","import React, { useEffect } from \"react\";\nimport { observer, inject } from \"mobx-react\";\n\nexport const User = inject(\"dataStore\")(\n  observer(({ dataStore }) => {\n    useEffect(() => {\n      dataStore.getCurrentUser();\n    }, []);\n\n    return (\n      <div className=\"container\">\n        <h3>\n          {dataStore.isAuthenticated ? (\n            <div>\n              <p>{dataStore.currentUser.firstName}</p>\n            </div>\n          ) : (\n            <p>Not Signed In</p>\n          )}\n        </h3>\n      </div>\n    );\n  })\n);\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { observer, inject } from \"mobx-react\";\n\nexport const Products = inject(\"dataStore\")(\n  observer(({ dataStore }) => {\n    useEffect(() => {\n      dataStore.getProducts();\n    }, []);\n\n    const listItems = dataStore.products.map(item => (\n      <div className=\"card red\" key={item.id}>\n        <div className=\"col s12 m4 l4\">\n          <Link to={`/products/${item.id}`}>\n            <div className=\"card-image\">\n              <img src={item.pictureUrl} alt={item.name} />\n              <span className=\"card-title\">{item.name}</span>\n            </div>\n            <div className=\"card-content white\">\n              <p>\n                <b>Price: {item.price}$</b>\n              </p>\n            </div>\n          </Link>\n        </div>\n      </div>\n    ));\n\n    return (\n      <div className=\"container white\">\n        <div className=\"row\">\n          <div className=\"\">{listItems}</div>\n        </div>\n      </div>\n    );\n  })\n);\n","import React from \"react\";\nimport { Products } from \"./Products\";\n\nexport const Home = () => <Products />;\n","export const API_BASE_URL =\n  process.env.REACT_APP_API_BASE_URL || \"http://localhost\";\nexport const API_BASE_PORT = process.env.REACT_APP_API_PORT || \"8080\";\nexport const ACCESS_TOKEN = \"accessToken\";\n","import React from \"react\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport Input from \"@material-ui/core/Input\";\n\nconst validationSchema = Yup.object().shape({\n  firstName: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\"),\n  lastName: Yup.string()\n    .min(2, \"Too Short!\")\n    .max(50, \"Too Long!\")\n    .required(\"Required\")\n});\n\nexport const AddressDetails = () => (\n  <Formik\n    initialValues={{\n      firstName: \"\",\n      lastName: \"\",\n      address1: \"\",\n      city: \"\",\n      postcode: \"\"\n    }}\n    validationSchema={validationSchema}\n    onSubmit={values => {\n      console.log(values);\n      alert(\"This is a mock order! click ok to redirect to homepage\");\n      window.location.href = \"/\";\n    }}\n  >\n    {({ errors, touched, values, handleChange, handleBlur }) => (\n      <Form>\n        <Input\n          name=\"firstName\"\n          type=\"text\"\n          placeholder=\"First Name\"\n          value={values.firstName}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          disableUnderline={true}\n          className={errors.firstName && touched.firstName && \"error\"}\n        />\n        {errors.firstName && touched.firstName ? (\n          <div>{errors.firstName}</div>\n        ) : null}\n        <br />\n        <Input\n          name=\"lastName\"\n          type=\"text\"\n          placeholder=\"Last Name\"\n          value={values.lastName}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          disableUnderline={true}\n          className={errors.lastName && touched.lastName && \"error\"}\n        />\n        {errors.lastName && touched.lastName ? (\n          <div>{errors.lastName}</div>\n        ) : null}\n        <br />\n        <Input\n          name=\"address1\"\n          type=\"text\"\n          placeholder=\"Address\"\n          value={values.address1}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          disableUnderline={true}\n          className={errors.address1 && touched.address1 && \"error\"}\n        />\n        {errors.address1 && touched.address1 ? (\n          <div>{errors.address1}</div>\n        ) : null}\n        <br />\n        <Input\n          name=\"city\"\n          type=\"text\"\n          placeholder=\"City\"\n          value={values.city}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          disableUnderline={true}\n          className={errors.city && touched.city && \"error\"}\n        />\n        {errors.city && touched.city ? <div>{errors.city}</div> : null}\n        <br />\n        <Input\n          name=\"postcode\"\n          type=\"text\"\n          placeholder=\"Postcode\"\n          value={values.city}\n          onChange={handleChange}\n          onBlur={handleBlur}\n          disableUnderline={true}\n          className={errors.postcode && touched.postcode && \"error\"}\n        />\n        {errors.postcode && touched.postcode ? (\n          <div>{errors.postcode}</div>\n        ) : null}\n        <br />\n        <button type=\"submit\">Pay Now</button>\n      </Form>\n    )}\n  </Formik>\n);\n","import React, { useEffect } from \"react\";\nimport { observer, inject } from \"mobx-react\";\n\nexport const BasketDetails = inject(\"dataStore\")(\n  observer(({ dataStore }) => {\n    useEffect(() => {\n      dataStore.getBasket();\n    }, []);\n\n    return <h1>{dataStore.basket.basketPrice}</h1>;\n  })\n);\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { ACCESS_TOKEN } from \"../constants\";\nimport { AddressDetails } from \"./AddressDetails\";\nimport { BasketDetails } from \"./BasketDetails\";\n\nexport const Checkout = () => {\n  const isLogged = localStorage.getItem(ACCESS_TOKEN);\n  console.log(\"logged: \" + isLogged);\n  if (!isLogged) {\n    return <Redirect to=\"/basket\" />;\n  }\n  return (\n    <div>\n      <h1>Checkout</h1>\n\n      <div className=\"row\">\n        <div className=\"col s3 \">\n          <BasketDetails />\n        </div>\n        <div className=\"col s9 \">\n          <AddressDetails />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { Component } from \"react\";\nimport { API_BASE_URL } from \"../constants\";\nimport { API_BASE_PORT } from \"../constants\";\nimport { observer, inject } from \"mobx-react\";\n\n@inject(\"dataStore\")\n@observer\nclass ProductDetail extends Component {\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.dataStore.getProductDetail(id);\n  }\n\n  handleClick = () => {\n    let { id } = this.props.match.params;\n    fetch(API_BASE_URL + \":\" + API_BASE_PORT + `/basket/add/${id}`, {\n      method: \"POST\"\n    })\n      .then(data => {\n        console.log(\"data in basket: \" + data.json());\n        this.props.dataStore.basket = data;\n      })\n      .catch(() => console.log(\"Add to basket api call failed\"));\n\n    this.props.history.push(`/basket`);\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"\">\n          <div className=\"row\">\n            <div className=\"col s4\">\n              <img\n                src={this.props.dataStore.productDetail.pictureUrl}\n                alt={this.props.dataStore.productDetail.name}\n              />\n            </div>\n            <div className=\"col s8\">\n              <div className=\"row\">\n                <div className=\"col s12\">\n                  {this.props.dataStore.productDetail.name}\n                </div>\n                {this.props.dataStore.productDetail.price}\n                <div className=\"col s12\"></div>\n              </div>\n            </div>\n          </div>\n          <button\n            className=\"btn waves-effect waves-teal\"\n            onClick={this.handleClick}\n          >\n            Add To Basket\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ProductDetail;\n","import React, { Component } from \"react\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport { ACCESS_TOKEN } from \"../constants\";\nimport { Link } from \"react-router-dom\";\nimport Input from \"@material-ui/core/Input\";\nimport { observer, inject } from \"mobx-react\";\n\nconst validationSchema = Yup.object().shape({\n  usernameOrEmail: Yup.string().required(\"Required\"),\n  password: Yup.string().required(\"No password provided.\")\n});\n\n@inject(\"dataStore\")\n@observer\nclass ValidatedLoginForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      badCredentials: false\n    };\n  }\n\n  render() {\n    return (\n      <Formik\n        initialValues={{\n          usernameOrEmail: \"\",\n          password: \"\"\n        }}\n        onSubmit={values => {\n          const loginRequest = JSON.stringify(values);\n\n          this.props.dataStore\n            .login(loginRequest)\n            .then(response => {\n              localStorage.setItem(ACCESS_TOKEN, response.accessToken);\n              this.props.dataStore.handleLogin();\n              this.props.history.push(`/`);\n            })\n            .catch(error => {\n              console.log(error);\n              if (error.status === 401) {\n                this.setState({\n                  badCredentials: true\n                });\n              }\n            });\n        }}\n        validationSchema={validationSchema}\n      >\n        {({ errors, touched, values, handleChange, handleBlur }) => (\n          <Form>\n            <p>\n              Please login or <Link to=\"/signup\">signup</Link>{\" \"}\n            </p>\n\n            <Input\n              name=\"usernameOrEmail\"\n              type=\"text\"\n              placeholder=\"Username or Email\"\n              value={values.usernameOrEmail}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              disableUnderline={true}\n              className={\n                errors.usernameOrEmail && touched.usernameOrEmail && \"error\"\n              }\n            />\n            {errors.usernameOrEmail && touched.usernameOrEmail && (\n              <div className=\"input-feedback\">{errors.usernameOrEmail}</div>\n            )}\n            <br />\n            <Input\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              value={values.password}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              disableUnderline={true}\n              className={errors.password && touched.password && \"error\"}\n            />\n            {errors.password && touched.password && (\n              <div className=\"input-feedback\">{errors.password}</div>\n            )}\n            <br />\n\n            {this.state.badCredentials ? (\n              <div className=\"input-feedback\">\n                Incorrect username or password\n              </div>\n            ) : null}\n            <br />\n\n            <button className=\"btn waves-effect waves-light\" type=\"submit\">\n              Login\n            </button>\n          </Form>\n        )}\n      </Formik>\n    );\n  }\n}\n\nexport default ValidatedLoginForm;\n","import React, { Component } from \"react\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport Input from \"@material-ui/core/Input\";\nimport { observer, inject } from \"mobx-react\";\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string().required(\"Required\"),\n  username: Yup.string().required(\"Required\"),\n  email: Yup.string()\n    .email()\n    .required(\"Required\"),\n  password: Yup.string()\n    .required(\"No password provided.\")\n    .min(8, \"Password is too short - should be 8 chars minimum.\"),\n  passwordConfirm: Yup.string()\n    .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\n    .required(\"Password confirm is required\")\n});\n\n@inject(\"dataStore\")\n@observer\nclass ValidatedSignup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userNameExists: false,\n      emailExists: false\n    };\n  }\n\n  handleErrors = response => {\n    if (response.message === \"Username is already taken!\") {\n      this.setState({\n        usernameExists: true\n      });\n    }\n    if (response.message === \"Email is already taken!\") {\n      this.setState({\n        emailExists: true\n      });\n    }\n  };\n\n  render() {\n    return (\n      <Formik\n        initialValues={{\n          name: \"\",\n          username: \"\",\n          email: \"\",\n          password: \"\",\n          passwordConfirm: \"\"\n        }}\n        onSubmit={values => {\n          const signupRequest = JSON.stringify(values);\n          this.setState({\n            usernameExists: false,\n            emailExists: false\n          });\n\n          this.props.dataStore\n            .signup(signupRequest)\n            .then(response => {\n              this.props.history.push(`/login`);\n            })\n            .catch(error => {\n              console.log(\"caught\");\n              this.handleErrors(error);\n            });\n        }}\n        validationSchema={validationSchema}\n      >\n        {({ values, errors, touched, handleChange, handleBlur }) => (\n          <Form>\n            <Input\n              name=\"name\"\n              type=\"text\"\n              placeholder=\"Name\"\n              value={values.name}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              disableUnderline={true}\n              className={errors.name && touched.name && \"error\"}\n            />\n            {errors.name && touched.name && (\n              <div className=\"input-feedback\">{errors.name}</div>\n            )}\n            <br />\n            <Input\n              name=\"username\"\n              type=\"text\"\n              placeholder=\"Username\"\n              value={values.username}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              disableUnderline={true}\n              className={errors.username && touched.username && \"error\"}\n            />\n            {errors.username && touched.username && (\n              <div className=\"input-feedback\">{errors.username}</div>\n            )}\n\n            {this.state.usernameExists === true && (\n              <div className=\"input-feedback\">Username already exsists</div>\n            )}\n\n            <br />\n            <Input\n              name=\"email\"\n              type=\"text\"\n              placeholder=\"Email\"\n              value={values.email}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              disableUnderline={true}\n              className={errors.email && touched.email && \"error\"}\n            />\n            {errors.email && touched.email && (\n              <div className=\"input-feedback\">{errors.email}</div>\n            )}\n            <br />\n            <Input\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"Password\"\n              value={values.password}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              disableUnderline={true}\n              className={errors.password && touched.password && \"error\"}\n            />\n            {errors.password && touched.password && (\n              <div className=\"input-feedback\">{errors.password}</div>\n            )}\n\n            {this.state.emailExists === true && (\n              <div className=\"input-feedback\">Email already exsists</div>\n            )}\n            <br />\n            <Input\n              name=\"passwordConfirm\"\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              value={values.passwordConfirm}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              disableUnderline={true}\n              className={\n                errors.passwordConfirm && touched.passwordConfirm && \"error\"\n              }\n            />\n            {errors.passwordConfirm && touched.passwordConfirm && (\n              <div className=\"input-feedback\">{errors.passwordConfirm}</div>\n            )}\n            <br />\n            <br />\n            <button className=\"btn waves-effect waves-light\" type=\"submit\">\n              Register\n            </button>\n          </Form>\n        )}\n      </Formik>\n    );\n  }\n}\n\nexport default ValidatedSignup;\n","import React, { useEffect } from \"react\";\nimport { Route, Switch, withRouter } from \"react-router-dom\";\nimport \"./App.css\";\nimport { Navbar } from \"./components/Navbar\";\nimport { Basket } from \"./components/Basket\";\nimport { User } from \"./components/User\";\nimport { Home } from \"./components/Home\";\nimport { Checkout } from \"./components/Checkout\";\nimport ProductDetail from \"./components/ProductDetail\";\nimport ValidatedFormLogin from \"./components/ValidatedFormLogin\";\nimport ValidatedSignup from \"./components/ValidatedSignup\";\nimport Cookies from \"universal-cookie\";\nimport { observer, inject } from \"mobx-react\";\n\nconst cookies = new Cookies();\n\ncookies.set(\"cookieID\", \"1\", { path: \"/\" });\n\nconst App = inject(\"dataStore\")(\n  observer(({ dataStore }) => {\n    useEffect(() => {\n      dataStore.handleLogin();\n    }, []);\n\n    return (\n      <div className=\"App\">\n        <Navbar />\n\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/basket\" component={Basket} />\n          <Route path=\"/products/:id\" component={ProductDetail} />\n          <Route path=\"/checkout\" component={Checkout} />\n          <Route path=\"/login\" component={ValidatedFormLogin} />\n          <Route path=\"/signup\" component={ValidatedSignup} />\n          <Route path=\"/user\" component={User} />\n        </Switch>\n      </div>\n    );\n  })\n);\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { observable, action } from \"mobx\";\nimport { ACCESS_TOKEN } from \"../constants\";\nimport { API_BASE_URL } from \"../constants\";\nimport { API_BASE_PORT } from \"../constants\";\nimport Cookies from \"universal-cookie\";\n\n//configure({ enforceActions: 'observed' })\n\nconst cookies = new Cookies();\n\nclass DataStore {\n  @observable isAuthenticated = false;\n\n  @observable currentUser = {};\n\n  @observable basket = {};\n\n  @observable basketContent = [];\n\n  @observable products = [];\n\n  @observable productDetail = {};\n\n  @action handleLogin = () => {\n    this.getCurrentUser().then(response => {\n      this.currentUser = response;\n      this.isAuthenticated = true;\n    });\n  };\n\n  @action handleLogoutState = () => {\n    localStorage.removeItem(ACCESS_TOKEN);\n    this.isAuthenticated = false;\n    this.currentUser = {};\n  };\n\n  @action request = options => {\n    const headers = new Headers({\n      \"Content-Type\": \"application/json\"\n    });\n\n    if (localStorage.getItem(ACCESS_TOKEN)) {\n      headers.append(\n        \"Authorization\",\n        \"Bearer \" + localStorage.getItem(ACCESS_TOKEN)\n      );\n    }\n\n    const defaults = { headers: headers };\n    options = Object.assign({}, defaults, options);\n\n    return fetch(options.url, options).then(response =>\n      response.json().then(json => {\n        if (!response.ok) {\n          return Promise.reject(json);\n        }\n        return json;\n      })\n    );\n  };\n\n  @action getBasket = () => {\n    let id = cookies.get(\"cookieID\");\n    fetch(API_BASE_URL + \":\" + API_BASE_PORT + `/basket/baskets/${id}`)\n      .then(response => {\n        console.log(API_BASE_URL);\n        return response.json();\n      })\n      .then(data => {\n        console.log(data);\n        this.basket = data;\n        console.log(\"this basket\" + this.basket);\n        this.basketContent = data.basketContent;\n      });\n  };\n\n  @action getProductDetail = id => {\n    fetch(API_BASE_URL + \":\" + API_BASE_PORT + `/products/${id}`)\n      .then(response => {\n        return response.json();\n      })\n      .then(data => {\n        console.log(\"data: \" + data);\n        this.productDetail = data;\n      })\n      .catch(() => console.log(\"Products api call failed\"));\n  };\n\n  @action getProducts = () => {\n    fetch(API_BASE_URL + \":\" + API_BASE_PORT + \"/products\")\n      .then(response => {\n        console.log(API_BASE_URL);\n        return response.json();\n      })\n      .then(data => (this.products = data))\n      .catch(() => console.log(\"Products api call failed\"));\n  };\n\n  @action getCurrentUser = () => {\n    if (!localStorage.getItem(ACCESS_TOKEN)) {\n      return Promise.reject(\"No access token set.\");\n    }\n\n    return this.request({\n      url: API_BASE_URL + \":\" + API_BASE_PORT + \"/user/me\",\n      method: \"GET\"\n    });\n  };\n\n  @action login = loginRequest => {\n    return this.request({\n      url: API_BASE_URL + \":\" + API_BASE_PORT + \"/api/auth/signin\",\n      method: \"POST\",\n      body: loginRequest\n    });\n  };\n\n  @action signup = signupRequest => {\n    return this.request({\n      url: API_BASE_URL + \":\" + API_BASE_PORT + \"/api/auth/signup\",\n      method: \"POST\",\n      body: signupRequest\n    });\n  };\n}\n\nexport default new DataStore();\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'mobx-react';\nimport dataStore from './store/dataStore';\n\nconst stores = {\n    dataStore\n}\n\nReactDOM.render(\n\n    <Provider {...stores} >\n        <Router>\n            <App />\n        </Router>\n    </Provider>,\n document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}